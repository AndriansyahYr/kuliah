unit IKAN;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.Grids, Vcl.StdCtrls, Vcl.Buttons;

type
  TForm1 = class(TForm)
    StringDataTest: TStringGrid;
    Label1: TLabel;
    Button1: TButton;
    StringGrid1: TStringGrid;
    StringGrid2: TStringGrid;
    Button2: TButton;
    BitBtn1: TBitBtn;
    procedure FormCreate(Sender: TObject);
    procedure readData(str :TStringGrid; txt:string);
    function hitungPeluang(str :TStringGrid; val:integer):double;
    procedure isiStringGrid(str :TStringGrid);
    procedure Button1Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure klasifikasiMissingValue();
    procedure BitBtn1Click(Sender: TObject);
    procedure knn();
    procedure sorting(hasil : array of real; atr:integer);
    function findString(hasil:array of String) : String;
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;
  data1,noA,noB, miss, complete:integer;
  dataTest : array[1..100,1..100] of String;
  dataMissing : array[1..100,1..100] of String;
  completeData : array[1..100,1..100] of String;
implementation
{$R *.dfm}
function TForm1.hitungPeluang(str :TStringGrid; val:integer):double;
var i, j,count,temp,temp2:integer;
    status : boolean;
    list : TStrings;
    hasil : string;
begin
  i:=1;
  j:=2;
  temp:=0;
  temp2:=1;
  hasil:='0';
  list:=TStringList.Create;
  status:=true;
  while(status) do
  begin
    if(str.Cells[1,i] = 'JUMLAH') then
      break;
    ExtractStrings(['-'],[],Pchar(str.Cells[1,i]),list);
    if (val > StrToInt(list[temp])) and (val <= StrToInt(list[temp2])) then
    begin
       hasil:=str.Cells[j,i];
       status:=false;
       break;
    end;
    i:=i+1;
    temp:=temp+2;
    temp2:=temp2+2;
  end;
  hitungPeluang:=StrToFloat(hasil);
end;

procedure TForm1.BitBtn1Click(Sender: TObject);
begin
  knn();
end;

procedure TForm1.knn();
var i,j, counter:integer;
    hitung:real;
    hasil : array[1..100] of real;
    atribut : integer;
begin
  counter:=1;
  for i := 1 to StringGrid2.RowCount-1 do
  begin
    hitung:=0;
    for j := 1 to StringGrid2.ColCount-3 do
    begin
      if dataMissing[j, i]= '?' then
        atribut:= j;
      if(completeData[j, i]=dataMissing[j, 2]) then
      begin
        hitung:=hitung+0;
      end
      else if(completeData[j, i]<>dataMissing[j,2]) and (dataMissing[j, 2] <> '?')then
      begin
        hitung:=hitung+1;
      end;
    end;
    hasil[counter]:=sqrt(hitung);
    counter:=counter+1;
  end;
  sorting(hasil, atribut);
end;

procedure TForm1.sorting(hasil : array of real; atr:integer);
var i,j, size,nilaiK:integer;
temp, minimum : real;
n:integer;
s : String;
nilai : array [0..100, 0..100] of real;
tempString : array[0..100] of String;
begin
  size := 5;
  nilaiK := 3;
  atr := 3;
      nilaiK:=nilaiK-1;
      while (nilaiK>=0) do
      begin
        minimum:=hasil[0];
        for i := 0 to size do
        begin
          if(minimum>hasil[i]) then
            begin
              n:=i;
              minimum:=hasil[i];
              hasil[i]:=10000.0;
//              ShowMessage(FloatToStr(hasil[n]));
              break;
            end;
        end;
        tempString[nilaiK]:=completeData[atr, n+1];
        ShowMessage('halo');

        nilaiK:=nilaiK-1;
      end;
      s:=findString(tempString);
end;

function TForm1.findString(hasil:array of String) : String;
var i, nilaiY, nilaiN:integer;
  minimum : real;
  output:String;
begin
  for i := 1 to 3 do
    begin
      if(hasil[i]='y') then
        nilaiY:=nilaiY+1
      else nilaiN:=nilaiN+1;
    end;
//  if(nilaiY>nilaiN) then
//    ShowMessage('y')
//  else ShowMessage('n');
end;
procedure TForm1.Button1Click(Sender: TObject);
begin
  readData(StringDataTest,'data test.txt');
  Button1.Enabled := false;
  Button2.Enabled := true;
end;
procedure TForm1.isiStringGrid(str : TStringGrid);
var
  i,j:integer;
begin
  for i := 0 to str.RowCount-1 do
    for j := 0 to str.ColCount-1 do
        begin
            if (i=0) then
              str.Cells[i,j]:=IntToStr(j);
            if (i=0) and (j=0) then
              str.Cells[j,i]:='No Records'
            else if (i=0) and (j=1) then
              str.Cells[j,i]:='Infants'
            else if (i=0) and (j=2) then
              str.Cells[j,i]:='Crime'
            else if (i=0) and (j=3) then
              str.Cells[j,i]:='Imigration'
            else if (i=0) and (j=4) then
              str.Cells[j,i]:='Duty Free'
            else if (i=0) and (j=5) then
              str.Cells[j,i]:='mx-missile'
            else if (i=0) and (j=6) then
              str.Cells[j,i]:='class'
        end;
end;
procedure TForm1.Button2Click(Sender: TObject);
begin
  isiStringGrid(StringGrid2);
  isiStringGrid(StringGrid1);
  klasifikasiMissingValue();
end;

procedure TForm1.klasifikasiMissingValue();
var
  i,j, k:integer;
  text:string;
  ketemu:bool;
begin
    text:='?';
     miss:=0;
     complete:=0;
     for i := 1 to StringDataTest.RowCount-1 do
     begin
        ketemu:=false;
        for j := 1 to StringDataTest.ColCount-2 do
        begin
          if(dataTest[j, i] = text) then
          begin
            miss := miss+1;
            for k := 1 to StringDataTest.ColCount-2 do
            begin
              dataMissing[k, miss] := dataTest[k, i];
              StringGrid1.Cells[k, miss] := dataMissing[k, miss];
              ketemu:=true;
            end;
          end
          else if (ketemu=false) and (j=6) then
          begin
            complete:=complete+1;
            for k := 1 to StringDataTest.ColCount-2 do
              begin
                completeData[k, complete] := dataTest[k, i];
                StringGrid2.Cells[k, complete] := completeData[k, complete];
              end;
          end;
        end;
     end;

end;
procedure TForm1.FormCreate(Sender: TObject);
var
  i,j:integer;
  myFile : TextFile;
  text:string;
begin
     for i := 0 to StringDataTest.ColCount-1 do
        for j := 0 to StringDataTest.RowCount-1 do
        begin
            if (i=0) then
              StringDataTest.Cells[i,j]:=IntToStr(j);
            if (i=0) and (j=0) then
              StringDataTest.Cells[j,i]:='No Records'
            else if (i=0) and (j=1) then
              StringDataTest.Cells[j,i]:='Infants'
            else if (i=0) and (j=2) then
              StringDataTest.Cells[j,i]:='Crime'
            else if (i=0) and (j=3) then
              StringDataTest.Cells[j,i]:='Imigration'
            else if (i=0) and (j=4) then
              StringDataTest.Cells[j,i]:='Duty Free'
            else if (i=0) and (j=5) then
              StringDataTest.Cells[j,i]:='mx-missile'
            else if (i=0) and (j=6) then
              StringDataTest.Cells[j,i]:='class'
        end;

end;
procedure TForm1.readData(str :TStringGrid; txt:string);
var i,j,count, count2,panjang:integer;
    myFile:TextFile;
    list : TStrings;
//    list : array[1..100] of String;
begin
    i:=1;
    j:=1;
    count:=0;
    count2:=0;
//    jumFrek:=0;
    list:=TStringList.Create;
//    SetLength(list, 100);
    AssignFile(myFile, txt);
    Reset(myFile);
    while not Eof(myFile) do
    begin
      while i<=7 do
      begin
        Readln(myFile, txt);
        ExtractStrings([chr(9)],[],Pchar(txt),list);
        if(i=7) then
          begin
            i := 1;
            j:= j+1;
          end;
        if (count=60) then
          break;
        str.Cells[i,j]:= list[count];
        dataTest[i,j] := list[count];
        i:=i+1;
        count:=count+1;
      end;
    end;
    CloseFile(myFile);
end;
end.
